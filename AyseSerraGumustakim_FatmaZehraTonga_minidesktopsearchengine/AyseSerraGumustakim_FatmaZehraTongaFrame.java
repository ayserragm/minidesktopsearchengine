/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package AyseSerraGumustakim_FatmaZehraTonga_minidesktopsearchengine;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.JTextArea;

/**
 *
 * @author EMRULLAH
 */
public class AyseSerraGumustakim_FatmaZehraTongaFrame extends javax.swing.JFrame {

    private AyseSerraGumustakim_FatmaZehraTongaBinarySearchTreeClass bst;
    private HashSet<String> ignoreList;
    private JTextArea selectedFilesTextArea;
    Map<String, LinkedList<String>> fileContents = new HashMap<>();

    /**
     * Creates new form NewJFrame
     */
    public AyseSerraGumustakim_FatmaZehraTongaFrame() {
        initComponents();
        bst = new AyseSerraGumustakim_FatmaZehraTongaBinarySearchTreeClass();
        ignoreList = new HashSet<>(Arrays.asList("a", "ain't", "am", "an", "and", "are", "aren't", "as", "at", "be", "been", "by", "can", "cannot", "cant", "can't", "co", "co.", "com", "could", "couldn't", "did", "didn't",
                "do", "does", "doesn't", "don't", "eg", "eg", "else", "et", "etc", "ex", "for", "from", "going", "got", "had", "hadn't", "has", "hasn't", "have", "haven't", "he", "he'd", "he'll", "her", "hers", "he's", "hi", "him", "his", "how", "i", "i'd",
                "ie", "if", "i'll", "i'm", "in", "inc", "instead", "into", "is", "isn't", "it", "it'd", "it'll", "its", "it's", "i've", "let", "let's", "ltd", "may", "mayn't", "me", "might", "mightn't", "mine", "mr", "mrs", "ms", "must", "mustn't", "my", "nd", "needn't", "no", "non", "none", "nor", "not", "of", "off", "oh", "ok", "okay", "on", "one's", "onto", "or", "ought", "oughtn't", "our", "ours", "out", "over", "per", "que", "qv", "rd", "re", "shall", "shan't", "she", "she'd", "she'll", "she's", "should",
                "shouldn't", "so", "sub", "such", "sup", "th", "than", "that", "that'll", "thats", "that's", "that've", "the", "their", "theirs", "them", "then", "thence", "there", "there'd", "there'll", "there're", "theres", "there's", "there've", "these", "they", "they'd", "they'll", "they're", "they've", "thing", "things", "this", "those", "thus", "to", "too", "un", "up", "us", "via", "viz", "vs", "was", "wasn't", "we", "we'd", "we'll", "were", "we're", "weren't", "we've", "what'll", "what's", "what've", "where's", "who'd", "who'll", "who's", "will", "with", "won't", "would", "wouldn't", "yet", "you", "you'd", "you'll", "your", "you're", "yours", "you've", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"));

        selectedFilesTextArea = new JTextArea();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the
     * Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jPanel1 = new javax.swing.JPanel();
        btnSelectFile = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        inOrder_btn = new javax.swing.JButton();
        preOrder = new javax.swing.JButton();
        postOrder_btn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 74, 112));

        btnSelectFile.setBackground(new java.awt.Color(0, 0, 0));
        btnSelectFile.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSelectFile.setForeground(new java.awt.Color(255, 255, 255));
        btnSelectFile.setText("Select File");
        btnSelectFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectFileActionPerformed(evt);
            }
        });

        jTextArea2.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jTextField1.setBackground(new java.awt.Color(204, 204, 204));
        jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(204, 204, 204));
        btnSearch.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(0, 0, 0));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        inOrder_btn.setBackground(new java.awt.Color(0, 0, 0));
        inOrder_btn.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        inOrder_btn.setForeground(new java.awt.Color(255, 255, 255));
        inOrder_btn.setText("Inorder");
        inOrder_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inOrder_btnActionPerformed(evt);
            }
        });

        preOrder.setBackground(new java.awt.Color(0, 0, 0));
        preOrder.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        preOrder.setForeground(new java.awt.Color(255, 255, 255));
        preOrder.setText("Preorder");
        preOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preOrderActionPerformed(evt);
            }
        });

        postOrder_btn.setBackground(new java.awt.Color(0, 0, 0));
        postOrder_btn.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        postOrder_btn.setForeground(new java.awt.Color(255, 255, 255));
        postOrder_btn.setText("Postorder");
        postOrder_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postOrder_btnActionPerformed(evt);
            }
        });

        jTextArea3.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea3.setColumns(20);
        jTextArea3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        jTextArea1.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(275, 275, 275)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 309, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(btnSelectFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(inOrder_btn)
                .addGap(18, 18, 18)
                .addComponent(preOrder)
                .addGap(18, 18, 18)
                .addComponent(postOrder_btn)
                .addGap(34, 34, 34))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(309, 309, 309)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelectFile)
                    .addComponent(inOrder_btn)
                    .addComponent(preOrder)
                    .addComponent(postOrder_btn))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 1389, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(30, 67, Short.MAX_VALUE)
                    .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 880, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void preOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preOrderActionPerformed

        jTextArea3.setText("");
        if (bst.root != null) {
            StringBuilder result = new StringBuilder();
            bst.preOrderTraversal(bst.root, result);
            jTextArea3.setText(result.toString());
        } else {
            jTextArea3.setText("Search for words before sorting.");
        }

    }//GEN-LAST:event_preOrderActionPerformed

    private void inOrder_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inOrder_btnActionPerformed

        jTextArea3.setText("");
        if (bst.root != null) {
            StringBuilder result = new StringBuilder();
            bst.inOrderTraversal(bst.root, result);
            jTextArea3.setText(result.toString());
        } else {
            jTextArea3.setText("Search for words before sorting.");

        }
    }//GEN-LAST:event_inOrder_btnActionPerformed

    private void postOrder_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postOrder_btnActionPerformed

        jTextArea3.setText("");
        if (bst.root != null) {
            StringBuilder result = new StringBuilder();
            bst.postOrderTraversal(bst.root, result);
            jTextArea3.setText(result.toString());
        } else {
            jTextArea3.setText("Search for words before sorting");

        }
    }//GEN-LAST:event_postOrder_btnActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed

        String searchWord = jTextField1.getText().trim().toLowerCase();
        bst = new AyseSerraGumustakim_FatmaZehraTongaBinarySearchTreeClass();

        for (String fileName : fileContents.keySet()) {
            LinkedList<String> content = fileContents.get(fileName);
            for (String line : content) {
                // Ignore lines starting with "<"
                if (!line.trim().startsWith("<")) {
                    // Split line into words using non-alphanumeric characters
                    String[] words = line.split("[^a-zA-Z0-9']+");
                    for (String word : words) {
                        word = word.toLowerCase();
                        if (!word.isEmpty() && !ignoreList.contains(word)) {
                            int frequency = 0;
                            for (String w : words) {
                                if (w.equalsIgnoreCase(word)) {
                                    frequency++;
                                }
                            }
                            bst.root = bst.insertRec(bst.root, word, fileName, frequency);
                        }
                    }
                }
            }
        }

        AyşeSerraGümüştakım_FatmaZehraTongaNodeClass resultNode = bst.searchRec(bst.root, searchWord);

        if (resultNode != null) {
            System.out.println("The word '" + searchWord + "' was found in the following files:");
            StringBuilder result = new StringBuilder();

            LinkedList<String> fileNames = resultNode.getFileNames();
            LinkedList<Integer> frequencies = resultNode.getFrequencies();

            for (int i = 0; i < fileNames.size(); i++) {
                result.append(fileNames.get(i)).append(": ").append(frequencies.get(i)).append(" times\n");
            }

            jTextArea1.setText(result.toString());
        } else {
            System.out.println("Word '" + searchWord + "' not found.");
            jTextArea1.setText("Word '" + searchWord + "' not found.");
        }


    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnSelectFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectFileActionPerformed

        /* JFileChooser fileChooser = new JFileChooser();
        fileChooser.setMultiSelectionEnabled(true);
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File[] selectedFiles = fileChooser.getSelectedFiles();

            for (File selectedFile : selectedFiles) {
                LinkedList<String> fileContent = new LinkedList<>();
                try ( BufferedReader reader = new BufferedReader(new FileReader(selectedFile))) {
                    String line;
                    while ((line = reader.readLine()) != null) {
                        // Ignore lines starting with "<"
                        if (!line.trim().startsWith("<")) {
                            fileContent.add(line);
                        }
                    }
                    fileContents.put(selectedFile.getName(), fileContent);

                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            jTextArea1.setText("");
            for (LinkedList<String> content : fileContents.values()) {
                for (String line : content) {
                    jTextArea1.append(line + "\n");
                }
            }
            jTextArea2.setText("");
            for (String fileName : fileContents.keySet()) {
                jTextArea2.append(fileName + "\n");
            }
        }*/
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setMultiSelectionEnabled(true);
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File[] selectedFiles = fileChooser.getSelectedFiles();

            for (File selectedFile : selectedFiles) {
                LinkedList<String> fileContent = new LinkedList<>();
                try ( BufferedReader reader = new BufferedReader(new FileReader(selectedFile))) {
                    String line;
                    while ((line = reader.readLine()) != null) {
                        // Ignore lines starting with "<"
                        if (!line.trim().startsWith("<")) {
                            fileContent.add(line);
                        }
                        
                    }
                    fileContents.put(selectedFile.getName(), fileContent);

                } catch (IOException e) {
                    e.printStackTrace();
                }
            }

            // Güncellenmiş dosya içeriğini gösterme
            updateTextAreaWithFileContents();
        }
    }

    private void updateTextAreaWithFileContents() {
        jTextArea1.setText("");
        for (LinkedList<String> content : fileContents.values()) {
            for (String line : content) {
                jTextArea1.append(line + "\n");
            }
        }

        jTextArea2.setText("");
        for (String fileName : fileContents.keySet()) {
            jTextArea2.append(fileName + "\n");
        }

    }//GEN-LAST:event_btnSelectFileActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AyseSerraGumustakim_FatmaZehraTongaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AyseSerraGumustakim_FatmaZehraTongaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AyseSerraGumustakim_FatmaZehraTongaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AyseSerraGumustakim_FatmaZehraTongaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AyseSerraGumustakim_FatmaZehraTongaFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSelectFile;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton inOrder_btn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton postOrder_btn;
    private javax.swing.JButton preOrder;
    // End of variables declaration//GEN-END:variables
}
